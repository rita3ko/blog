---
//import { blog } from "../../lib/markdoc/frontmatter.schema";
import BlogPostMeta from "../../components/BlogPostMeta.astro";
import ContentLayout from "../../layouts/ContentLayout.astro";
import { getCollection } from 'astro:content';
import { SITE_URL } from "../../config";
import { date } from "zod";

//import { getCollection } from 'astro:content';
// 1. Generate a new path for every collection entry
export const prerender = true;

export async function getStaticPaths() {
  const blogEntries = await getCollection('blog');
  return blogEntries.map(post => ({ 
    params: { slug: post.slug }, props: { post }, 
  }));
};
// 2. For your template, you can get the entry directly from the prop
const { post }  = Astro.props;

console.log(post)
if (!post) {
  throw new Error('Blog entry not found');
}

const { Content } = await post.render();

const ogImageAbsoluteUrl = post.external !== true && post.ogImagePath
  ? new URL(post.ogImagePath, SITE_URL).toString()
  : undefined;

---
<ContentLayout title={post.data.title} date={post.data.date} {...post.data}>
  <BlogPostMeta
    title={post.data.title}
    description={post.data.external ? undefined : post.data.description}
    publishDate={post.data.date}
    pagePath={`/blog/${post.data.slug}`}
    ogImageAbsoluteUrl={ogImageAbsoluteUrl}
    slot="meta"
  />
  <Content />
</ContentLayout>
